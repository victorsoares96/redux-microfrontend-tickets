{"version":3,"file":"src_bootstrap_js.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;AAEA,MAAMK,iBAAiB,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AACjD,QAAMC,SAAS,GAAGC,MAAM,CAACH,KAAD,CAAxB,CADiD,CAChB;AACjC;;AACA,QAAME,SAAS,CAACE,IAAV,CAAeC,qBAAwB,CAACC,OAAxC,CAAN;AACA,SAAOJ,SAAS,CAACK,GAAV,CAAcN,MAAd,EAAsBO,IAAtB,CAA4BC,OAAD,IAAa;AAC7C,UAAMC,MAAM,GAAGD,OAAO,EAAtB;AACA,WAAOC,MAAP;AACD,GAHM,CAAP;AAID,CARD;;AAUA,MAAMC,SAAS,gBAAGjB,iDAAA,CAAW,MAAMK,iBAAiB,CAAC,MAAD,EAAS,aAAT,CAAlC,CAAlB;;AAEA,MAAMc,GAAG,GAAG,MAAM;AAChB,sBACE,2DAAC,iDAAD;AAAU,SAAK,EAAEf,yCAAKA;AAAtB,kBACE,4GAEE,qFACE,2DAAC,2CAAD;AAAU,YAAQ,EAAC;AAAnB,kBACE,2DAAC,SAAD;AAAW,SAAK,EAAEA,yCAAKA;AAAvB,IADF,CADF,CAFF,CADF,CADF;AAYD,CAbD;;AAeAF,uDAAA,eAAgB,2DAAC,GAAD,OAAhB,EAAyBmB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;;;;;;;;;;;;;;;;;ACjCA;AAEA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;AAFJ;AAID,CALD;;AAOA,MAAMG,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAEL;AADe,CAAvB;AAIA;AACA;AACA;AACA;;AACe,SAASM,cAAT,CAAwBR,YAAxB,EAAsC;AACnD,QAAMS,gBAAgB,GACpB,OAAO1B,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAAC2B,oCAArC,GACI3B,MAAM,CAAC2B,oCAAP,CAA4C,EAA5C,CADJ,GAEIX,0CAHN;AAKA,QAAMY,QAAQ,GAAGF,gBAAgB,EAAjC;AACA,QAAM/B,KAAK,GAAGoB,kDAAW,CAACc,aAAa,EAAd,EAAkBD,QAAlB,CAAzB;AAEAjC,EAAAA,KAAK,CAACmC,aAAN,GAAsB,EAAtB;;AAEAnC,EAAAA,KAAK,CAACoC,aAAN,GAAsB,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAC3CtC,IAAAA,KAAK,CAACmC,aAAN,CAAoBE,GAApB,IAA2BC,YAA3B;AACAtC,IAAAA,KAAK,CAACuC,cAAN,CAAqBL,aAAa,CAAClC,KAAK,CAACmC,aAAP,CAAlC;AACD,GAHD;;AAKA,SAAOnC,KAAP;AACD;;AAED,SAASkC,aAAT,CAAuBC,aAAvB,EAAsC;AACpC,SAAOhB,sDAAe,CAAC,EACrB,GAAGS,cADkB;AAErB,OAAGO;AAFkB,GAAD,CAAtB;AAID;;AAEM,MAAMnC,KAAK,GAAG8B,cAAc,EAA5B","sources":["webpack://@redux-reducer-injection/app1/./src/bootstrap.js","webpack://@redux-reducer-injection/app1/./src/store.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\n\nconst dynamicFederation = async (scope, module) => {\n  const container = window[scope]; // or get the container somewhere else\n  // Initialize the container, it may provide shared modules\n  await container.init(__webpack_share_scopes__.default);\n  return container.get(module).then((factory) => {\n    const Module = factory();\n    return Module;\n  });\n};\n\nconst RemoteApp = React.lazy(() => dynamicFederation('app2', './RemoteApp'));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div>\n        Welcome to Host App\n        <div>\n          <Suspense fallback=\"Loading...\">\n            <RemoteApp store={store} />\n          </Suspense>\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import { combineReducers, createStore, compose } from 'redux';\n\nconst initialState = {\n  appName: 'host',\n};\n\nconst hostReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst staticReducers = {\n  host: hostReducer,\n};\n\n/**\n * Cf. redux docs:\n * https://redux.js.org/recipes/code-splitting/#defining-an-injectreducer-function\n */\nexport default function configureStore(initialState) {\n  const composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose;\n\n  const enhancer = composeEnhancers();\n  const store = createStore(createReducer(), enhancer);\n\n  store.asyncReducers = {};\n\n  store.injectReducer = (key, asyncReducer) => {\n    store.asyncReducers[key] = asyncReducer;\n    store.replaceReducer(createReducer(store.asyncReducers));\n  };\n\n  return store;\n}\n\nfunction createReducer(asyncReducers) {\n  return combineReducers({\n    ...staticReducers,\n    ...asyncReducers,\n  });\n}\n\nexport const store = configureStore();\n"],"names":["React","Suspense","ReactDOM","Provider","store","dynamicFederation","scope","module","container","window","init","__webpack_share_scopes__","default","get","then","factory","Module","RemoteApp","lazy","App","render","document","getElementById","combineReducers","createStore","compose","initialState","appName","hostReducer","state","action","type","staticReducers","host","configureStore","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","createReducer","asyncReducers","injectReducer","key","asyncReducer","replaceReducer"],"sourceRoot":""}